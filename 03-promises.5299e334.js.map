{"mappings":"YAAA,IAAMA,EAAUC,SAASC,cAAc,SAiBvC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAGFS,MAAK,SAAAC,GACJC,QAAQC,IAAIF,E,IAEbG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,E,IAhClBnB,EAAQoB,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAIjB,EAAQkB,OAAOvB,EAAQK,MAAMU,OAC3BS,EAAOD,OAAOvB,EAAQwB,KAAKT,OAC3BU,EAASF,OAAOvB,EAAQyB,OAAOV,OAE5BW,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCvB,EAAcuB,EAAGrB,GACjBA,GAASmB,C","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(formRef.delay.value);\n  const step = Number(formRef.step.value);\n  const amount = Number(formRef.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  promise\n    .then(value => {\n      console.log(value);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n"],"names":["$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","then","value","console","log","catch","error","addEventListener","e","preventDefault","Number","step","amount","i"],"version":3,"file":"03-promises.5299e334.js.map"}