{"mappings":"AAAA,MAAMA,EAAUC,SAASC,cAAc,SAiBvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,IAGRQ,MAAKC,IACJC,QAAQC,IAAIF,EAAM,IAEnBG,OAAMC,IACLH,QAAQC,IAAIE,EAAM,G,CAhCxBlB,EAAQmB,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIhB,EAAQiB,OAAOtB,EAAQK,MAAMS,OACjC,MAAMS,EAAOD,OAAOtB,EAAQuB,KAAKT,OAC3BU,EAASF,OAAOtB,EAAQwB,OAAOV,OAErC,IAAK,IAAIW,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCtB,EAAcsB,EAAGpB,GACjBA,GAASkB,C","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(formRef.delay.value);\n  const step = Number(formRef.step.value);\n  const amount = Number(formRef.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  promise\n    .then(value => {\n      console.log(value);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n"],"names":["$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","value","console","log","catch","error","addEventListener","e","preventDefault","Number","step","amount","i"],"version":3,"file":"03-promises.dbb3d99e.js.map"}